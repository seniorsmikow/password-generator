{"version":3,"sources":["components/Checkbox/Checkbox.module.css","components/Input/Input.module.css","components/Generator/Generator.module.css","components/Button/Button.tsx","components/Checkbox/Checkbox.tsx","components/Input/Input.tsx","components/Select/Select.tsx","components/Generator/Generator.tsx","components/Generator/GeneratorContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Generator/GeneratorContainer.module.css","components/Button/Button.module.css"],"names":["module","exports","Button","text","handleChangePassword","className","styles","button","onClick","Checkbox","type","handleCheckbox","checkbox","onChange","Input","defaultValue","readOnly","input","Select","options","handlePasswordLength","onBlur","map","el","index","Generator","passwordsLengthOptions","result","handlePasswordCopy","copyAnimation","root__generator","copyText","generator__input","generator__copy_icon","color","generator__checkbox","generator__select","generator__button","GeneratorContainer","useState","setResult","passwordLength","setPasswordLength","checkboxType","setCheckboxType","setCopyAnimation","symbols","root","event","target","value","currentResult","i","rundom","Math","floor","random","length","substring","timerId","navigator","clipboard","writeText","then","window","setTimeout","clearTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a9941d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__wHBSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Input_root__1dhzC\",\"input\":\"Input_input__3tJex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root__generator\":\"Generator_root__generator__2XpMI\",\"generator__input\":\"Generator_generator__input__10vt4\",\"generator__copy_icon\":\"Generator_generator__copy_icon__34zaQ\",\"generator__checkbox\":\"Generator_generator__checkbox__2gqcn\",\"generator__select\":\"Generator_generator__select__3tjTc\",\"generator__button\":\"Generator_generator__button__2Zp3x\",\"copyText\":\"Generator_copyText__2VQy4\",\"copy\":\"Generator_copy__22cat\"};","import React from 'react'\r\nimport styles from './Button.module.css'\r\n\r\ntype PropsType = {\r\n    text: string\r\n    handleChangePassword: () => void\r\n}    \r\n\r\nconst Button: React.FC<PropsType> = ({text, handleChangePassword}) => {\r\n\r\n    return (\r\n        <div className={styles.button}>\r\n            <button onClick={handleChangePassword}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n//import cx from 'clsx'\r\nimport styles from './Checkbox.module.css'\r\n\r\ntype PropsType = {\r\n    type: string\r\n    handleCheckbox: () => void\r\n\r\n}\r\n\r\nconst Checkbox: React.FC<PropsType> = ({type, handleCheckbox}) => {\r\n    return (\r\n        <div className={styles.checkbox}>\r\n            <input \r\n                type={type}\r\n                onChange={handleCheckbox}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport styles from './Input.module.css'\r\n\r\ntype PropsType = {\r\n    defaultValue: string\r\n    readOnly: boolean\r\n}\r\n\r\nconst Input: React.FC<PropsType> = ({defaultValue, readOnly}) => {\r\n\r\n    return (\r\n        <div className={styles.input}>\r\n            <input \r\n                defaultValue={defaultValue}\r\n                readOnly={readOnly}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input ","import React from 'react'\r\n//import styles from './Select.module.css'\r\n//import cx from 'clsx'\r\n\r\ntype PropsType = {\r\n    options: Array<any>\r\n    handlePasswordLength: (event) => void\r\n}\r\n\r\nconst Select: React.FC<PropsType> = ({options = [], handlePasswordLength}) => {\r\n\r\n    return (\r\n        <div>\r\n            <select onBlur={handlePasswordLength}>\r\n                {options.map((el, index) => {\r\n                    return (\r\n                        <option key={index}>{el}</option>\r\n                    )}\r\n                )}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport Button from '../Button/Button'\r\nimport Checkbox from '../Checkbox/Checkbox'\r\nimport Input from '../Input/Input'\r\nimport Select from '../Select/Select'\r\nimport styles from './Generator.module.css'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\ntype PropsType = {\r\n    passwordsLengthOptions: Array<number>\r\n    result: string\r\n    handleCheckbox: () => void\r\n    handlePasswordLength: (event) => void\r\n    handleChangePassword: () => void\r\n    handlePasswordCopy: () => void\r\n    copyAnimation: boolean\r\n}\r\n\r\nconst Generator: React.FC<PropsType> = ({passwordsLengthOptions, \r\n                                        result, \r\n                                        handleCheckbox, \r\n                                        handlePasswordLength, \r\n                                        handleChangePassword, \r\n                                        handlePasswordCopy,\r\n                                        copyAnimation\r\n                                        }) => {\r\n\r\n\r\n    return (\r\n        <div className={styles.root__generator}>\r\n\r\n            { copyAnimation ? <div className={styles.copyText}>Copy!!!</div> : null }\r\n\r\n            <div className={styles.generator__input}>\r\n                <Input \r\n                    defaultValue={result}\r\n                    readOnly={true}\r\n                />\r\n                <div className={styles.generator__copy_icon}>\r\n                    <FileCopyIcon color='action' onClick={handlePasswordCopy}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.generator__checkbox}>\r\n                Использовать спецсимволы \r\n                <Checkbox \r\n                    type=\"checkbox\" \r\n                    handleCheckbox={handleCheckbox}\r\n                />\r\n            </div>\r\n\r\n            <div className={styles.generator__select}>\r\n                Длина пароля\r\n                <Select \r\n                    options={passwordsLengthOptions} \r\n                    handlePasswordLength={handlePasswordLength}\r\n                />\r\n            </div>\r\n\r\n            <div className={styles.generator__button}>\r\n                <Button \r\n                    text={\"Сгенерировать пароль\"} \r\n                    handleChangePassword={handleChangePassword}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Generator","import React, { useState } from 'react'\r\nimport styles from './GeneratorContainer.module.css'\r\nimport Generator from './Generator'\r\n\r\n\r\nconst GeneratorContainer = () => {\r\n\r\n    let passwordsLengthOptions = [10, 12, 14, 15, 16]\r\n\r\n    let [result, setResult] = useState('')\r\n    let [passwordLength, setPasswordLength] = useState(passwordsLengthOptions[0])\r\n    let [checkboxType, setCheckboxType] = useState(false)\r\n    let [copyAnimation, setCopyAnimation] = useState(false)\r\n\r\n    let symbols = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPRSTUVWXYZ'\r\n    let specialSymbols = '!@#$%^&*()_<>/?'\r\n\r\n    if(checkboxType) {\r\n        symbols += specialSymbols\r\n    }\r\n\r\n    const handleChangePassword = () => {\r\n\r\n        let currentResult = ''\r\n\r\n        for(let i = 0; i < passwordLength; i++) {\r\n            let rundom = Math.floor(Math.random() * symbols.length)\r\n            currentResult += symbols.substring(rundom, rundom + 1)\r\n        }\r\n        setResult(currentResult)\r\n    }\r\n\r\n    const handleCheckbox = () => {\r\n        setCheckboxType(!checkboxType)\r\n    }\r\n\r\n    const handlePasswordLength = (event) => {\r\n        setPasswordLength(event.target.value)\r\n    }\r\n\r\n    const handlePasswordCopy = () => {\r\n        if(result) {\r\n            let timerId: number\r\n            navigator.clipboard.writeText(result).then(() => {\r\n                setCopyAnimation(true)\r\n                timerId = window.setTimeout(() => {\r\n                    setCopyAnimation(false)\r\n                    clearTimeout(timerId)\r\n                }, 2000)\r\n            })\r\n            setResult('')\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className={styles.root}>\r\n            <Generator \r\n                passwordsLengthOptions={passwordsLengthOptions}\r\n                result={result}\r\n                handleCheckbox={handleCheckbox}\r\n                handlePasswordLength={handlePasswordLength}\r\n                handleChangePassword={handleChangePassword}\r\n                handlePasswordCopy={handlePasswordCopy}\r\n                copyAnimation={copyAnimation}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneratorContainer","import React from 'react'\nimport './App.css'\nimport GeneratorContainer from './components/Generator/GeneratorContainer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Генератор паролей</h1>\n      <GeneratorContainer />\n    </div>\n  );\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GeneratorContainer_root__151oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3ATFO\",\"button-move\":\"Button_button-move__2lX_D\"};"],"sourceRoot":""}